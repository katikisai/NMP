{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\happie-world\\\\src\\\\components\\\\EventBind.js\";\n//binding event handler\n//Approch one binding in render method\n\n/*import React,{Component} from 'react'\r\nclass EventBind extends Component{\r\n     constructor(){\r\n         super()\r\n         this.state = {\r\n             message:'Hello'\r\n         }\r\n     }\r\n     clickHandler(){\r\n         this.setState({\r\n             message:\"Good Bye\"\r\n         })\r\n         console.log(this)   //this keyword refers event bind component \r\n     }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>{this.state.message}</div>\r\n                 <button onClick = {this.clickHandler.bind(this)}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EventBind;*/\n//arrow functions in render method\n\n/*import React,{Component} from 'react'\r\nclass EventBind extends Component{\r\n     constructor(){\r\n         super()\r\n         this.state = {\r\n             message:'Hello'\r\n         }\r\n     }\r\n     clickHandler(){\r\n         this.setState({\r\n             message:\"Good Bye\"\r\n         })\r\n         console.log(this)   //this keyword refers event bind component \r\n     }\r\n    render(){\r\n        return(//we don't need the curly braces and return keyword for()=> because the function body is a single statement\r\n            <div>  \r\n                <div>{this.state.message}</div>\r\n                 <button onClick = {()=>this.clickHandler()}>click</button>\r\n            </div>\r\n        ) //we are calling the eventHandler are returning the value that is why paranthesis is required in this approch\r\n    }\r\n}\r\nexport default EventBind;*/\n//approch 3,this is binding the eventhandler in the constructor\n\n/*import React,{Component} from 'react'\r\nclass EventBind extends Component{\r\n     constructor(props){\r\n         super(props)\r\n         this.state = {\r\n             message:'Hello'\r\n         }\r\n         this.clickHandler = this.clickHandler.bind(this)\r\n     }\r\n     clickHandler(){\r\n         this.setState({\r\n             message:\"Good Bye\"\r\n         })\r\n         console.log(this)    \r\n     }\r\n    render(){\r\n        return(\r\n            <div>  \r\n                <div>{this.state.message}</div>\r\n                 <button onClick = {this.clickHandler}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EventBind;*/\n//arrow function as class property\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventBind extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickHandler = () => {\n      this.setState({\n        message: 'Good Bye!'\n      });\n    };\n\n    this.state = {\n      message: 'Hello'\n    }; //this.clickHandler = this.clickHandler.bind(this)\n  }\n  /*clickHandler(){\r\n      this.setState({\r\n          message:\"Good Bye\"\r\n      })\r\n      console.log(this)    \r\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clickHandler,\n        children: \"click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EventBind;","map":{"version":3,"sources":["C:/React/happie-world/src/components/EventBind.js"],"names":["React","Component","EventBind","constructor","props","clickHandler","setState","message","state","render"],"mappings":";AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;AACA,MAAMC,SAAN,SAAwBD,SAAxB,CAAiC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,YAbkB,GAaH,MAAI;AACf,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAC;AADE,OAAd;AAGH,KAjBiB;;AAEd,SAAKC,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAC;AADC,KAAb,CAFc,CAKd;AACH;AACD;AACL;AACA;AACA;AACA;AACA;;;AAMIE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAA,kBAAM,KAAKD,KAAL,CAAWD;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEK;AAAQ,QAAA,OAAO,EAAI,KAAKF,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA1B4B;;AA4BjC,eAAeH,SAAf","sourcesContent":["//binding event handler\r\n//Approch one binding in render method\r\n/*import React,{Component} from 'react'\r\nclass EventBind extends Component{\r\n     constructor(){\r\n         super()\r\n         this.state = {\r\n             message:'Hello'\r\n         }\r\n     }\r\n     clickHandler(){\r\n         this.setState({\r\n             message:\"Good Bye\"\r\n         })\r\n         console.log(this)   //this keyword refers event bind component \r\n     }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>{this.state.message}</div>\r\n                 <button onClick = {this.clickHandler.bind(this)}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EventBind;*/\r\n//arrow functions in render method\r\n/*import React,{Component} from 'react'\r\nclass EventBind extends Component{\r\n     constructor(){\r\n         super()\r\n         this.state = {\r\n             message:'Hello'\r\n         }\r\n     }\r\n     clickHandler(){\r\n         this.setState({\r\n             message:\"Good Bye\"\r\n         })\r\n         console.log(this)   //this keyword refers event bind component \r\n     }\r\n    render(){\r\n        return(//we don't need the curly braces and return keyword for()=> because the function body is a single statement\r\n            <div>  \r\n                <div>{this.state.message}</div>\r\n                 <button onClick = {()=>this.clickHandler()}>click</button>\r\n            </div>\r\n        ) //we are calling the eventHandler are returning the value that is why paranthesis is required in this approch\r\n    }\r\n}\r\nexport default EventBind;*/\r\n\r\n//approch 3,this is binding the eventhandler in the constructor\r\n/*import React,{Component} from 'react'\r\nclass EventBind extends Component{\r\n     constructor(props){\r\n         super(props)\r\n         this.state = {\r\n             message:'Hello'\r\n         }\r\n         this.clickHandler = this.clickHandler.bind(this)\r\n     }\r\n     clickHandler(){\r\n         this.setState({\r\n             message:\"Good Bye\"\r\n         })\r\n         console.log(this)    \r\n     }\r\n    render(){\r\n        return(\r\n            <div>  \r\n                <div>{this.state.message}</div>\r\n                 <button onClick = {this.clickHandler}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EventBind;*/\r\n//arrow function as class property\r\nimport React,{Component} from 'react'\r\nclass EventBind extends Component{\r\n     constructor(props){\r\n         super(props)\r\n         this.state = {\r\n             message:'Hello'\r\n         }\r\n         //this.clickHandler = this.clickHandler.bind(this)\r\n     }\r\n     /*clickHandler(){\r\n         this.setState({\r\n             message:\"Good Bye\"\r\n         })\r\n         console.log(this)    \r\n     }*/\r\n     clickHandler = ()=>{\r\n         this.setState({\r\n             message:'Good Bye!'\r\n         })\r\n     }\r\n    render(){\r\n        return(\r\n            <div>  \r\n                <div>{this.state.message}</div>\r\n                 <button onClick = {this.clickHandler}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EventBind;\r\n"]},"metadata":{},"sourceType":"module"}