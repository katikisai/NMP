{"ast":null,"code":"/*import React,{Component} from 'react'\r\nclass RefsDemo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.inputRef = React.createRef()\r\n    }\r\n    componentDidMount(){\r\n        this.inputRef.current.focus()\r\n        console.log(this.inputRef);\r\n    }\r\n    clickHandler = ()=>{\r\n        alert(this.inputRef.current.value)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            <input type = \"text\" ref = {this.inputRef}/>\r\n            <button onClick = {this.clickHandler}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RefsDemo*/\n//callbacks refs\n\n/*import React,{Component} from 'react'\r\nclass RefsDemo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.inputRef = React.createRef()\r\n        this.cbRef = null\r\n        this.setcbRef = (element)=>{\r\n            this.cbRef = element\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.cbRef){\r\n            this.cbRef.focus()\r\n        }\r\n    }\r\n    clickHandler = ()=>{\r\n        alert(this.inputRef.current.value)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            <input type = \"text\" ref = {this.inputRef}/>\r\n            <input type = \"text\" ref = {this.setcbRef}/>\r\n            <button onClick = {this.clickHandler}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RefsDemo*/","map":{"version":3,"sources":["C:/React/happie-world/src/components/RefsDemo.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import React,{Component} from 'react'\r\nclass RefsDemo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.inputRef = React.createRef()\r\n    }\r\n    componentDidMount(){\r\n        this.inputRef.current.focus()\r\n        console.log(this.inputRef);\r\n    }\r\n    clickHandler = ()=>{\r\n        alert(this.inputRef.current.value)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            <input type = \"text\" ref = {this.inputRef}/>\r\n            <button onClick = {this.clickHandler}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RefsDemo*/\r\n//callbacks refs\r\n/*import React,{Component} from 'react'\r\nclass RefsDemo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.inputRef = React.createRef()\r\n        this.cbRef = null\r\n        this.setcbRef = (element)=>{\r\n            this.cbRef = element\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.cbRef){\r\n            this.cbRef.focus()\r\n        }\r\n    }\r\n    clickHandler = ()=>{\r\n        alert(this.inputRef.current.value)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            <input type = \"text\" ref = {this.inputRef}/>\r\n            <input type = \"text\" ref = {this.setcbRef}/>\r\n            <button onClick = {this.clickHandler}>click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RefsDemo*/"]},"metadata":{},"sourceType":"module"}